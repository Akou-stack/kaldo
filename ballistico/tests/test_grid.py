import numpy as np
from ballistico.grid import Grid

replica_grid = np.array([[0, 0, 0],
                         [ 0,  0,  1],
                         [ 0,  0,  2],
                         [ 0,  0, -2],
                         [ 0,  0, -1],
                         [ 0,  1,  0],
                         [ 0,  1,  1],
                         [ 0,  1,  2],
                         [ 0,  1, -2],
                         [ 0,  1, -1],
                         [ 0,  2,  0],
                         [ 0,  2,  1],
                         [ 0,  2,  2],
                         [ 0,  2, -2],
                         [ 0,  2, -1],
                         [ 0, -2,  0],
                         [ 0, -2,  1],
                         [ 0, -2,  2],
                         [ 0, -2, -2],
                         [ 0, -2, -1],
                         [ 0, -1,  0],
                         [ 0, -1,  1],
                         [ 0, -1,  2],
                         [ 0, -1, -2],
                         [ 0, -1, -1],
                         [ 1,  0,  0],
                         [ 1,  0,  1],
                         [ 1,  0,  2],
                         [ 1,  0, -2],
                         [ 1,  0, -1],
                         [ 1,  1,  0],
                         [ 1,  1,  1],
                         [ 1,  1,  2],
                         [ 1,  1, -2],
                         [ 1,  1, -1],
                         [ 1,  2,  0],
                         [ 1,  2,  1],
                         [ 1,  2,  2],
                         [ 1,  2, -2],
                         [ 1,  2, -1],
                         [ 1, -2,  0],
                         [ 1, -2,  1],
                         [ 1, -2,  2],
                         [ 1, -2, -2],
                         [ 1, -2, -1],
                         [ 1, -1,  0],
                         [ 1, -1,  1],
                         [ 1, -1,  2],
                         [ 1, -1, -2],
                         [ 1, -1, -1],
                         [ 2,  0,  0],
                         [ 2,  0,  1],
                         [ 2,  0,  2],
                         [ 2,  0, -2],
                         [ 2,  0, -1],
                         [ 2,  1,  0],
                         [ 2,  1,  1],
                         [ 2,  1,  2],
                         [ 2,  1, -2],
                         [ 2,  1, -1],
                         [ 2,  2,  0],
                         [ 2,  2,  1],
                         [ 2,  2,  2],
                         [ 2,  2, -2],
                         [ 2,  2, -1],
                         [ 2, -2,  0],
                         [ 2, -2,  1],
                         [ 2, -2,  2],
                         [ 2, -2, -2],
                         [ 2, -2, -1],
                         [ 2, -1,  0],
                         [ 2, -1,  1],
                         [ 2, -1,  2],
                         [ 2, -1, -2],
                         [ 2, -1, -1],
                         [-2,  0,  0],
                         [-2,  0,  1],
                         [-2,  0,  2],
                         [-2,  0, -2],
                         [-2,  0, -1],
                         [-2,  1,  0],
                         [-2,  1,  1],
                         [-2,  1,  2],
                         [-2,  1, -2],
                         [-2,  1, -1],
                         [-2,  2,  0],
                         [-2,  2,  1],
                         [-2,  2,  2],
                         [-2,  2, -2],
                         [-2,  2, -1],
                         [-2, -2,  0],
                         [-2, -2,  1],
                         [-2, -2,  2],
                         [-2, -2, -2],
                         [-2, -2, -1],
                         [-2, -1,  0],
                         [-2, -1,  1],
                         [-2, -1,  2],
                         [-2, -1, -2],
                         [-2, -1, -1],
                         [-1,  0,  0],
                         [-1,  0,  1],
                         [-1,  0,  2],
                         [-1,  0, -2],
                         [-1,  0, -1],
                         [-1,  1,  0],
                         [-1,  1,  1],
                         [-1,  1,  2],
                         [-1,  1, -2],
                         [-1,  1, -1],
                         [-1,  2,  0],
                         [-1,  2,  1],
                         [-1,  2,  2],
                         [-1,  2, -2],
                         [-1,  2, -1],
                         [-1, -2,  0],
                         [-1, -2,  1],
                         [-1, -2,  2],
                         [-1, -2, -2],
                         [-1, -2, -1],
                         [-1, -1,  0],
                         [-1, -1,  1],
                         [-1, -1,  2],
                         [-1, -1, -2],
                         [-1, -1, -1]])

k_grid = np.array([[-0.4, -0.4, -0.4],
       [-0.4, -0.4, -0.2],
       [-0.4, -0.4,  0. ],
       [-0.4, -0.4,  0.2],
       [-0.4, -0.4,  0.4],
       [-0.4, -0.2, -0.4],
       [-0.4, -0.2, -0.2],
       [-0.4, -0.2,  0. ],
       [-0.4, -0.2,  0.2],
       [-0.4, -0.2,  0.4],
       [-0.4,  0. , -0.4],
       [-0.4,  0. , -0.2],
       [-0.4,  0. ,  0. ],
       [-0.4,  0. ,  0.2],
       [-0.4,  0. ,  0.4],
       [-0.4,  0.2, -0.4],
       [-0.4,  0.2, -0.2],
       [-0.4,  0.2,  0. ],
       [-0.4,  0.2,  0.2],
       [-0.4,  0.2,  0.4],
       [-0.4,  0.4, -0.4],
       [-0.4,  0.4, -0.2],
       [-0.4,  0.4,  0. ],
       [-0.4,  0.4,  0.2],
       [-0.4,  0.4,  0.4],
       [-0.2, -0.4, -0.4],
       [-0.2, -0.4, -0.2],
       [-0.2, -0.4,  0. ],
       [-0.2, -0.4,  0.2],
       [-0.2, -0.4,  0.4],
       [-0.2, -0.2, -0.4],
       [-0.2, -0.2, -0.2],
       [-0.2, -0.2,  0. ],
       [-0.2, -0.2,  0.2],
       [-0.2, -0.2,  0.4],
       [-0.2,  0. , -0.4],
       [-0.2,  0. , -0.2],
       [-0.2,  0. ,  0. ],
       [-0.2,  0. ,  0.2],
       [-0.2,  0. ,  0.4],
       [-0.2,  0.2, -0.4],
       [-0.2,  0.2, -0.2],
       [-0.2,  0.2,  0. ],
       [-0.2,  0.2,  0.2],
       [-0.2,  0.2,  0.4],
       [-0.2,  0.4, -0.4],
       [-0.2,  0.4, -0.2],
       [-0.2,  0.4,  0. ],
       [-0.2,  0.4,  0.2],
       [-0.2,  0.4,  0.4],
       [ 0. , -0.4, -0.4],
       [ 0. , -0.4, -0.2],
       [ 0. , -0.4,  0. ],
       [ 0. , -0.4,  0.2],
       [ 0. , -0.4,  0.4],
       [ 0. , -0.2, -0.4],
       [ 0. , -0.2, -0.2],
       [ 0. , -0.2,  0. ],
       [ 0. , -0.2,  0.2],
       [ 0. , -0.2,  0.4],
       [ 0. ,  0. , -0.4],
       [ 0. ,  0. , -0.2],
       [ 0. ,  0. ,  0. ],
       [ 0. ,  0. ,  0.2],
       [ 0. ,  0. ,  0.4],
       [ 0. ,  0.2, -0.4],
       [ 0. ,  0.2, -0.2],
       [ 0. ,  0.2,  0. ],
       [ 0. ,  0.2,  0.2],
       [ 0. ,  0.2,  0.4],
       [ 0. ,  0.4, -0.4],
       [ 0. ,  0.4, -0.2],
       [ 0. ,  0.4,  0. ],
       [ 0. ,  0.4,  0.2],
       [ 0. ,  0.4,  0.4],
       [ 0.2, -0.4, -0.4],
       [ 0.2, -0.4, -0.2],
       [ 0.2, -0.4,  0. ],
       [ 0.2, -0.4,  0.2],
       [ 0.2, -0.4,  0.4],
       [ 0.2, -0.2, -0.4],
       [ 0.2, -0.2, -0.2],
       [ 0.2, -0.2,  0. ],
       [ 0.2, -0.2,  0.2],
       [ 0.2, -0.2,  0.4],
       [ 0.2,  0. , -0.4],
       [ 0.2,  0. , -0.2],
       [ 0.2,  0. ,  0. ],
       [ 0.2,  0. ,  0.2],
       [ 0.2,  0. ,  0.4],
       [ 0.2,  0.2, -0.4],
       [ 0.2,  0.2, -0.2],
       [ 0.2,  0.2,  0. ],
       [ 0.2,  0.2,  0.2],
       [ 0.2,  0.2,  0.4],
       [ 0.2,  0.4, -0.4],
       [ 0.2,  0.4, -0.2],
       [ 0.2,  0.4,  0. ],
       [ 0.2,  0.4,  0.2],
       [ 0.2,  0.4,  0.4],
       [ 0.4, -0.4, -0.4],
       [ 0.4, -0.4, -0.2],
       [ 0.4, -0.4,  0. ],
       [ 0.4, -0.4,  0.2],
       [ 0.4, -0.4,  0.4],
       [ 0.4, -0.2, -0.4],
       [ 0.4, -0.2, -0.2],
       [ 0.4, -0.2,  0. ],
       [ 0.4, -0.2,  0.2],
       [ 0.4, -0.2,  0.4],
       [ 0.4,  0. , -0.4],
       [ 0.4,  0. , -0.2],
       [ 0.4,  0. ,  0. ],
       [ 0.4,  0. ,  0.2],
       [ 0.4,  0. ,  0.4],
       [ 0.4,  0.2, -0.4],
       [ 0.4,  0.2, -0.2],
       [ 0.4,  0.2,  0. ],
       [ 0.4,  0.2,  0.2],
       [ 0.4,  0.2,  0.4],
       [ 0.4,  0.4, -0.4],
       [ 0.4,  0.4, -0.2],
       [ 0.4,  0.4,  0. ],
       [ 0.4,  0.4,  0.2],
       [ 0.4,  0.4,  0.4]])


def test_k_mesh():
    grid_shape = (5, 5, 5)
    generated_grid = Grid(grid_shape=grid_shape, order='F', is_centering=False)
    np.testing.assert_equal(replica_grid, generated_grid.grid(is_wrapping=True))


def test_q_mesh():
    grid_shape = (5, 5, 5)
    generated_grid = Grid(grid_shape=grid_shape, order='F', is_centering=True)
    np.testing.assert_equal(k_grid, generated_grid.unitary_grid(is_wrapping=False))